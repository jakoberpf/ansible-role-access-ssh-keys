---
- name: Check if ssh key exists
  become: true
  stat:
    path: '/home/{{ ssh_user }}/.ssh/id_rsa'
  register: ssh_key_stat

- name: Create .ssh directory
  become: true
  file:
    path: '/home/{{ ssh_user }}/.ssh/'
    state: directory
  when: ssh_key_stat.stat.exists == False

- name: Generate ssh key
  become: yes
  command: 'ssh-keygen -t {{ ssh_keygen_algorithm }} -b {{ ssh_keygen_bits }} -N "{{ ssh_keygen_password }}" -f /home/{{ ssh_user }}/.ssh/id_{{ ssh_keygen_algorithm }}'
  when: ssh_key_stat.stat.exists == False

- name: Copy local public key to authorized_keys
  become: yes
  authorized_key:
    user: '{{ ssh_user }}'
    state: present
    key: '{{ item }}'
  with_items:
    - '{{ ssh_keys }}'

- name: Secure SSH configuration
  become: yes
  lineinfile:
    path: '{{ ssh_sshd_config_path }}'
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    state: present
  with_items:
    - regexp: '{{ comment_re_prefix }}Port'
      line: 'Port {{ ssh_port }}'
    - regexp: '{{ comment_re_prefix }}PasswordAuthentication'
      line: 'PasswordAuthentication {{ ssh_password_auth }}'
    - regexp: '{{ comment_re_prefix }}PermitRootLogin'
      line: 'PermitRootLogin {{ ssh_permit_root_login }}'
    - regexp: '{{ comment_re_prefix }}UseDNS'
      line: 'UseDNS {{ ssh_usedns }}'
    - regexp: '{{ comment_re_prefix }}PermitEmptyPasswords'
      line: 'PermitEmptyPasswords {{ ssh_permit_empty_passwords }}'
    - regexp: '{{ comment_re_prefix }}ChallengeResponseAuthentication'
      line: 'ChallengeResponseAuthentication {{ ssh_challenge_response_auth }}'
    - regexp: '{{ comment_re_prefix }}GSSAPIAuthentication'
      line: 'GSSAPIAuthentication {{ ssh_gss_api_auth }}'
    - regexp: '{{ comment_re_prefix }}X11Forwarding'
      line: 'X11Forwarding {{ ssh_x11_forwarding }}'
  notify:
    - restart ssh

- name: Secure SSH hosts configuration
  become: yes
  lineinfile:
    path: '{{ ssh_config_path }}'
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    state: present
  with_items:
    - regexp: '{{ comment_re_prefix }}HashKnownHosts'
      line: 'HashKnownHosts {{ ssh_hash_known_hosts }}'
  notify:
    - restart ssh